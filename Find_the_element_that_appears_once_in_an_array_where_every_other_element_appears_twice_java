class solution{
  static int findSingle(int[]arr){
  int res = arr[0];
  int a1= arr.length;
  for(int i=1;i <a1;i++)
    res= res ^ ar[i];
  
  return res;
  
  }
  public static void main(String[] args){
  int arr[]={5,7,65,67,68,};
  System.out.println("Element occurring once is " +
                            findSingle(ar, n) + " ");
  }
}

//Most efficient method
import java.io.*;
import java.util.Arrays;
 
class GFG{
     
static int singleelement(int arr[], int n)
{
    int low = 0, high = n - 2;
    int mid;
     while(low <=high){
      mid = (low + high)/2;
      if(arr[mid] == arr[mid ^ 1]){
      low=mid+1;
      } else{
       high = mid-1;
      }
     }return arr[low];
  }
  public static void main(String[] args)
{
    int arr[] = { 2, 3, 5, 4, 5, 3, 4 };
    int size = 7;
    Arrays.sort(arr);
     
    System.out.println(singleelement(arr, size));
}
}
      
